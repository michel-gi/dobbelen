# .github/workflows/cleanup-releases.yml
name: Delete old releases
on:
  schedule:
    # Runs at 01:00 every day to avoid conflicts with other scheduled jobs.
    - cron: '0 1 * * *'
  workflow_dispatch: # Allows you to run this workflow manually

jobs:
  delete-old-releases:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to delete releases and their tags.

    steps:
      - name: Delete releases older than the 3 most recent
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          releases_to_keep=3

          # List all release tags, skip the ones to keep, and store the rest.
          # The `gh` CLI is pre-installed on all GitHub-hosted runners and
          # is automatically authenticated. It sorts releases newest-first by default.
          tags_to_delete=$(gh release list --limit 100 --json tagName --jq '.[].tagName' | tail -n +$((releases_to_keep + 1)))

          if [[ -z "$tags_to_delete" ]]; then
            echo "No old releases to delete."
            exit 0
          fi

          echo "The following releases (and their tags) will be deleted:"
          echo "$tags_to_delete"

          echo "$tags_to_delete" | while IFS= read -r tag; do
            gh release delete "$tag" --cleanup-tag --yes
          done